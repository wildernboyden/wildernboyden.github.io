A = Matrix([[1948339,1974],[1923011580,1948339]]);
B = Matrix([[-975156],[-962479959]]);

# Choose your initial family
Xi = Matrix([[1],[0]]);
#Xi = Matrix([[1],[1]]);
#Xi = Matrix([[117],[-114985]]);
#Xi = Matrix([[117],[-114985]]);
#Xi = Matrix([[494],[487085]]);

def f(x):
    return A*x+B

def g(x):
    X = Xi
    for i in range(1,x+1):
        X = f(X)
    return X

def c(x):
    return x[0,0]/x[1,0]*(x[0,0]-1)/(x[1,0]-1)

def l(x):
    return len(str(x[1,0]))

# Prints the number of digits in b after each iteration
print([l(g(i)) for i in range(1,16)])

# Prints the [a, b] values after the 15th iteration (which gives the optimal solution for Xi = [1, 0])
print(g(15))

# Shows that the probability condition is satisfied
print(c(g(15)))
